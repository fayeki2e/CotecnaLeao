@model IEnumerable<TechParvaLEAO.Areas.Expense.Models.PaymentRequest>
@using TechParvaLEAO.Authorization
@using TechParvaLEAO.Areas.Expense.Models
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Common;
<form>
    <div class="col-lg-12" id="#latest-advance-request">
        <div class="card">
            <div class="card-header">
                <i class="fa fa-align-justify"></i>Advance Request List
            </div>
            <div class="card-body">
                @if ((bool)ViewData["CanApproveReject"] && User.IsInRole(AuthorizationRoles.MANAGER))
                {
                    <nav>
                        <ul class="pagination">
                            <li data-toggle="tooltip" data-placement="top" data-original-title="Select All">
                                <input type="checkbox" name="paymentrequestId" value="" id="select-all" style="zoom:1.5;">
                            </li>
                            <li>&nbsp;</li>
                            <li>&nbsp;</li>
                            <li>&nbsp;</li>
                            <li>&nbsp;</li>
                            <li>&nbsp;</li>
                            <li>&nbsp;</li>
                            <li class="page-item">
                                <input type="submit" formaction="/Expense/PaymentRequests/Approve" value="Approve" class="btn btn-success btn-md" id="approve_btn" />
                            </li>
                        </ul>
                    </nav>
                }
                <div class="table-responsive">
                    <table class="table table-responsive-sm table-bordered table-striped table-sm">
                        <thead>
                            <tr>

                                @if (
                             User.IsInRole(AuthorizationRoles.MANAGER)
                             && (bool)ViewData["CanApproveReject"])
                                {
                                    <th rowspan="2">Select</th>
                                }
                                <th rowspan="2">Advance Request No.</th>
                                <th rowspan="2">Create Date</th>
                                <th rowspan="2">Employee Code</th>
                                <th rowspan="2">Employee Name</th>
                                <th rowspan="2">Designation</th>
                                <th rowspan="2">Amount</th>
                                <th rowspan="2">History</th>
                                <th rowspan="2">Comment</th>
                                <th rowspan="2">Status</th>
                                <th rowspan="2">Finance Actioned Date</th>
                                @if (
                           User.IsInRole(AuthorizationRoles.MANAGER)
                           && (bool)ViewData["CanApproveReject"])
                                {
                                    <th colspan="2">Action</th>
                                }
                                </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                            <tr>

                                @if (
                               User.IsInRole(AuthorizationRoles.MANAGER)
                               && (bool)ViewData["CanApproveReject"])
                                {
                                    <td>
                                        @if ((
                                      string.Equals(item.Status, PaymentRequestStatus.PENDING.ToString()) ||
                                      string.Equals(item.Status, PaymentRequestStatus.APPROVED_ESCALATED.ToString())
                                      ) && item.PaymentRequestActionedById == (int)ViewData["LoggedInEmployeeId"])
                                        {
                                            <input type="checkbox" class="checkBoxClass" name="paymentrequestId" value="@item.Id">
                                        }
                                    </td>
                                }
                                <td>
                                    <a href="/Expense/PaymentRequests/AdvanceDetails/@item.Id">
                                        @Html.DisplayFor(modelItem => item.RequestNumber)
                                    </a>
                                </td>
                                <td><a asp-action="AdvanceDetails" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.PaymentRequestCreatedDate)</a></td>
                                <td>@Html.DisplayFor(modelItem => item.Employee.EmployeeCode)</td>
                                <td>@Html.DisplayFor(modelItem => item.Employee.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Employee.Designation.Name)</td>
                                <td>
                                    <a href="#" class="btn btn-primary btn-sm" data-toggle="collapse" data-target="#advance-payment-request-@item.Id">
                                        @Html.DisplayFor(modelItem => item.Currency.Name)&nbsp;@Html.DisplayFor(modelItem => item.Amount)
                                    </a>
                                </td>
                                <td>
                                    <a href="#" class="btn btn-info btn-sm" data-toggle="collapse" data-target="#History-@item.Id">
                                        History &nbsp; <i class="fa fa-angle-double-down"></i>
                                    </a>
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.Comment)</td>
                                <td>
                                    @if (string.Equals(item.Status, PaymentRequestStatus.APPROVED.ToString()))
                                    {
                                        <a href="#" class="btn btn-success btn-sm" data-toggle="collapse" data-target="#Approved-@item.Id">
                                            <span data-toggle="tooltip" data-placement="top" data-original-title="click for Details">
                                                @Html.DisplayFor(modelItem => item.Status) &nbsp;
                                                <i class="fa fa-angle-double-down"></i>
                                            </span>
                                        </a>}
                                    else if (string.Equals(item.Status, PaymentRequestStatus.PENDING.ToString()) ||
                                        string.Equals(item.Status, PaymentRequestStatus.APPROVED_ESCALATED.ToString()))
                                    {
                                        <a href="#" class="btn btn-warning btn-sm" data-toggle="collapse"
                                           data-target="#Approved-@item.Id">
                                            <span data-toggle="tooltip" data-placement="top" data-original-title="click for Details">
                                                @Html.DisplayFor(modelItem => item.Status)
                                                <i class="fa fa-angle-double-down"></i>
                                            </span>
                                            &nbsp;
                                        </a>
                                    }
                                    else if (string.Equals(item.Status, PaymentRequestStatus.REJECTED.ToString()))
                                    {
                                        <a href="#" class="btn btn-danger btn-sm" data-toggle="collapse"
                                           data-target="#Approved-@item.Id">
                                            <span data-toggle="tooltip" data-placement="top" data-original-title="click for Details">
                                                @Html.DisplayFor(modelItem => item.Status)
                                                <i class="fa fa-angle-double-down"></i>
                                            </span>
                                            &nbsp;
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="#" class="btn btn-danger btn-sm" data-toggle="collapse"
                                           data-target="#Approved-@item.Id">
                                            <span data-toggle="tooltip" data-placement="top" data-original-title="click for Details">
                                                @Html.DisplayFor(modelItem => item.Status)
                                                <i class="fa fa-angle-double-down"></i>
                                            </span>
                                            &nbsp;
                                        </a>
                                    }
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.PostedOn)</td>
                                <td>
                                    @if (User.IsInRole(AuthorizationRoles.MANAGER))
                                    {
                                        @if ((bool)ViewData["CanApproveReject"] && 
                                            item.PaymentRequestActionedById == (int)ViewData["LoggedInEmployeeId"] &&
                                            (string.Equals(item.Status, PaymentRequestStatus.PENDING.ToString()) ||
                                        string.Equals(item.Status, PaymentRequestStatus.APPROVED_ESCALATED.ToString())))
                                        {@Html.ActionLink("Approve", "Approve", "PaymentRequests", new { id = item.Id }, new { @class = "btn btn-success btn-sm" })
                                        @Html.ActionLink("Reject", "Reject", "PaymentRequests", new { id = item.Id }, new { @class = "btn btn-danger btn-sm" })}
                                    else if (item.Status == PaymentRequestStatus.APPROVED.ToString() || item.Status == PaymentRequestStatus.REJECTED.ToString())
                                    {<span>-</span>}
                                    }
                                    else
                                    {

                                    }

                                </td>
                            </tr>
                                <tr id="History-@item.Id" class="collapse">
                                    <th colspan="2">
                                        Transaction Log
                                    </th>
                                    <th colspan="10">
                                        <div>
                                            <div class="table-responsive">
                                                <table>
                                                    <thead>
                                                        <tr>
                                                            <th>By</th>
                                                            <th>Designation</th>
                                                            <th>Date</th>
                                                            <th>Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var action in item.ApprovalActions)
                                                        {
                                                            <tr>
                                                                <td>@Html.DisplayFor(modelItem => action.ActionBy.Name)</td>
                                                                <td><span class="badge badge-info">@Html.DisplayFor(modelItem => action.ActionBy.Designation.Name)</span></td>
                                                                <td>@Html.DisplayFor(modelItem => action.Timestamp)</td>
                                                                <td>@Html.DisplayFor(modelItem => action.Action)</td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </th>
                                </tr>
                                <tr id="Approved-@item.Id" class="collapse">
                                    <td colspan="12">
                                        <div class="table-responsive">
                                            <table>
                                                <thead>
                                                    <tr>
                                                        <th>No</th>
                                                        <th>Advance Request No.</th>
                                                        <th>Claim Amount</th>
                                                        <th>Approve / Reject BY</th>
                                                        <th>Approve / Reject Date</th>
                                                        <th>Rejection Reason</th>
                                                        <th>Status</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                                        <td>@Html.DisplayFor(modelItem => item.RequestNumber)</td>
                                                        <td>@Html.DisplayFor(modelItem => item.Currency.Name) @Html.DisplayFor(modelItem => item.Amount)</td>
                                                        <td>
                                                            <b>@Html.DisplayFor(modelItem => item.PaymentRequestActionedBy.Designation.Name)</b><br>
                                                            @Html.DisplayFor(modelItem => item.PaymentRequestActionedBy.Name)
                                                        </td>
                                                        <td>@Html.DisplayFor(modelItem => item.ActionDate)</td>
                                                        <td>@Html.DisplayFor(modelItem => item.RejectionReasons.Reason)</td>
                                                        <td><span class="badge badge-danger">@Html.DisplayFor(modelItem => item.Status)</span></td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
           @*     @Html.PagedListPager((IPagedList)Model, page => Url.Action((String)ViewData["PageLinkURL"],"PaymentRequests", new {area="Expense", id=page}), new PagedListRenderOptionsBase
                           {PageClasses = new string[] { "page-link" }, UlElementClasses = new string[] { "pagination" }, LiElementClasses = new string[] { "page-item" }, DisplayItemSliceAndTotal = false,
                           })*@
            </div>
            <div class="card-footer">

            </div>
        </div>
    </div>
</form>
@section scripts {
    <script src="~/js/common.js"></script>
}